@page "/"
@rendermode InteractiveServer
@inject ILogger<Search> Logger
@inject NavigationManager NavigationManager

<div class="d-flex row position-relative contentblock justify-content-center p-sm-3 p-1 
                @((!string.IsNullOrWhiteSpace(_searchParameters.SingleSearchString)
                    ?"col-12 col-md-11 col-lg-10 col-xl-9 col-xxl-8"
                    :"col-12 col-sm-10 col-lg-6 col-xl-4"))" 
style="@(_showIntro?"margin-top:10%":"")">

    <span id="topofbody"></span>

    @if(_showIntro)
    {
        <IntroTextComponent />
    }

    <SearchComponent
    OnSearchToBePerformed="@InitiateSearch"
    />

    <BookDetailComponent
    BookOpenSearchId="@_bookOpenSearchId"
    SearchTerm="@_searchParameters.SingleSearchString"
    />
    
    <BookMetaDataListComponent 
    SearchParameters="@_searchParameters"
    DoSearch="@_doSearch"
    OnBookIdReceived="@HandleIncomingBookRequest"
    />

</div>


@code {
    private bool _showIntro = true;

    private bool _doSearch = true;

    private SearchParameters _searchParameters =new();

    private string _bookOpenSearchId = "";

    private void InitiateSearch(SearchParameters searchParameters)
    {
        _searchParameters = searchParameters;
        _doSearch = true;
        _showIntro = false;
        Logger.LogInformation("Search parameters were set to {var}, so that Components can pick it up", _searchParameters.SingleSearchString);
    }

    private void HandleIncomingBookRequest(string bookOpenSearchId)
    {
        _bookOpenSearchId = bookOpenSearchId;
        _doSearch = false;
        Logger.LogInformation("The Search page received an incoming bookRequest {var} from BookMetaData through BookMetaDataList ", _bookOpenSearchId);
        NavigationManager.NavigateTo("#topofbody");
    }

    private void Navigate()
    {
        NavigationManager.NavigateTo("/x");
    }

}
