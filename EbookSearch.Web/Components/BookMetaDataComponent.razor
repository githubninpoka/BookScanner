@inject ILogger<BookMetaDataComponent> Logger

@if (BookMetaData != null)
{
    <hr />
    <div class="mb-1 mt-0 pointer bookMetaData" @onclick="@(() => BookCardClicked(BookMetaData.BookId))">
        <div class="row">
            <div class="d-none d-sm-block col-sm-1 align-content-center">
                <i class="fa-solid fa-book fa-2x"></i>
            </div>
            <div class="col-sm-11" >
                <div class="p-1 metaTitle">
                    <span class="fs-6 ">@titleToShow</span>
                </div>
                <div class="d-inline p-1 metaFilePath">
                    <span style="font-size:0.6rem">@BookMetaData.FilePath</span>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public IEbookMetaData? BookMetaData { get; set; }

    private string? titleToShow;

    [Parameter]
    public EventCallback<string> OnBookClicked { get; set; }

    async Task BookCardClicked(string input)
    {
        Logger.LogInformation("{var} - {var2} - User selected book card {var3} ",nameof(BookMetaDataComponent),nameof(BookCardClicked), input);
        await OnBookClicked.InvokeAsync(input);

    }
    protected override async Task OnParametersSetAsync()
    {
        int extensionMarker = BookMetaData.FileName.LastIndexOf('.');
        titleToShow = BookMetaData.FileName.Substring(0, extensionMarker);

    }
}
