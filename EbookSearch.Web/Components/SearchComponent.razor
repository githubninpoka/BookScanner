@inject ILogger<SearchComponent> _logger

<div class="d-flex position-relative justify-content-center">
    <div class="d-inline-flex flex-column position-relative justify-content-start" >
        <div class="d-inline-flex d-block justify-content-center my-2 w-auto">
            <EditForm Model="SearchParameters" OnValidSubmit="SearchButtonClicked" FormName="SearchForm" class="w-100">
                <DataAnnotationsValidator />
                <div class="input-group mb-2">
                    <InputText id="searchField"
                    @bind-Value="SearchParameters.SingleSearchString"
                    placeholder="Search here"
                    class="form-control"
                    @ref="_searchField" />
                    <button type="submit"
                    class="btn btn-primary">
                        <i class="fa fa-search">
                        </i>
                    </button>
                </div>
                <ValidationMessage For="@(() => SearchParameters.SingleSearchString)" style="text-decoration:underline;background-color:white" />
            </EditForm>
        </div>
        <div class="form-check form-switch">
            <input type="checkbox"
            id="switchReferences"
            role="switch"
            @bind="SearchParameters.OnlyReference"
            class="form-check-input" />
            <label class="form-check-label" for="switchReferences">Prefer a subset of pre-selected books? </label>
        </div>
        <div class="form-check form-switch">
            <input type="checkbox"
            id="switchTarot"
            role="switch"
            @bind="SearchParameters.AlsoTarot"
            class="form-check-input" />
            <label class="form-check-label" for="switchTarot">Prefer a subset of tarot books? </label>
        </div>
        <div class="form-check form-switch">
            <input type="checkbox"
            id="switchFuzzy"
            role="switch"
            @bind="SearchParameters.FuzzySearch"
            class="form-check-input" />
            <label class="form-check-label" for="switchFuzzy">Perform fuzzy search?<br />(Experimental and unreliable..)</label>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public SearchParameters SearchParameters { get; set; } = new();

    [Parameter]
    public EventCallback<SearchParameters> OnSearchToBePerformed { get; set; }

    private InputText _searchField;

    private void SearchButtonClicked()
    {
        OnSearchToBePerformed.InvokeAsync(SearchParameters);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (_searchField is not null && _searchField.Element is not null)
            {
                await _searchField.Element.Value.FocusAsync();
            }
        }
    }
}
